<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
const int Num_slaves = 2;
const int Num_masters = 1;
const int Local_delay_master = 10;
const int Local_delay_slave = 10;
const int Transmission_delay = 15;

clock t[Num_slaves + Num_masters];
chan TIC[Num_slaves + Num_masters];
int Local_time[Num_slaves + Num_masters];

chan SM[Num_slaves + Num_masters];

int Master_ref_time[Num_masters];
int Num_period = 0;

chan DM_T[Num_slaves + Num_masters - 1];
chan DM_R[Num_slaves + Num_masters - 1];
chan DM_C[Num_slaves + Num_masters - 1];

int T1[Num_masters];
int T2[Num_slaves];
int T3[Num_slaves];
int T4[Num_masters];
int Delay[Num_slaves];
</declaration>
	<template>
		<name>Clock</name>
		<parameter>chan &amp;TIC, int &amp;Local_time</parameter>
		<location id="id0" x="-51" y="68">
		</location>
		<location id="id1" x="-51" y="-17">
		</location>
		<init ref="id1"/>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="guard" x="-42" y="8">Num_period &gt;= 2</label>
			<label kind="synchronisation" x="-42" y="25">TIC?</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-51">Num_period &lt; 2</label>
			<label kind="synchronisation" x="-17" y="-17">TIC?</label>
			<label kind="assignment" x="-17" y="-34">Local_time := Local_time + 10</label>
			<nail x="-25" y="-34"/>
			<nail x="-25" y="0"/>
		</transition>
	</template>
	<template>
		<name x="5" y="5">Oscillator</name>
		<parameter>chan &amp;TIC, clock &amp;t</parameter>
		<declaration>int[9, 10] TIC_period;</declaration>
		<location id="id2" x="-110" y="0">
			<committed/>
		</location>
		<location id="id3" x="0" y="0">
			<label kind="invariant" x="-34" y="25">t &lt;= TIC_period</label>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="assignment" x="-110" y="-34">TIC_period := 10</label>
			<nail x="-59" y="8"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="assignment" x="-110" y="-51">TIC_period := 9</label>
			<nail x="-59" y="-8"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id3"/>
			<label kind="guard" x="42" y="-25">t &gt;= TIC_period</label>
			<label kind="synchronisation" x="42" y="8">TIC!</label>
			<label kind="assignment" x="42" y="-8">t := 0</label>
			<nail x="34" y="-25"/>
			<nail x="34" y="17"/>
		</transition>
	</template>
	<template>
		<name>Slave</name>
		<parameter>chan &amp;SM_in, chan &amp;SM_out, int &amp;Local_time, chan &amp;DM_T_in, chan &amp;DM_R_in, chan &amp;DM_C_in, chan &amp;DM_T_out, chan &amp;DM_R_out, chan &amp;DM_C_out, int &amp;T2, int &amp;T3, int &amp;Delay, int &amp;Master_ref_time</parameter>
		<declaration>clock t;</declaration>
		<location id="id4" x="-76" y="-739">
		</location>
		<location id="id5" x="-76" y="-663">
			<label kind="invariant" x="-59" y="-671">t &lt;= Local_delay_slave + Transmission_delay</label>
		</location>
		<location id="id6" x="-76" y="-578">
		</location>
		<location id="id7" x="-76" y="-493">
			<label kind="invariant" x="-59" y="-501">t &lt;= Local_delay_slave + Transmission_delay</label>
		</location>
		<location id="id8" x="-76" y="-408">
		</location>
		<location id="id9" x="-76" y="-315">
			<label kind="invariant" x="-59" y="-323">t &lt;= Local_delay_slave + Transmission_delay</label>
		</location>
		<location id="id10" x="-76" y="-43">
			<urgent/>
		</location>
		<location id="id11" x="-76" y="-128">
			<label kind="invariant" x="-59" y="-136">t &lt;= Local_delay_slave + Transmission_delay</label>
		</location>
		<location id="id12" x="-76" y="-221">
		</location>
		<init ref="id4"/>
		<transition>
			<source ref="id4"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="-68" y="-731">DM_T_in?</label>
			<label kind="assignment" x="-68" y="-714">T2 := Local_time,
t := 0</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-68" y="-561">DM_R_in?</label>
			<label kind="assignment" x="-68" y="-544">T3 := Local_time,
t := 0</label>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id6"/>
			<label kind="guard" x="-68" y="-620">t &gt;= Local_delay_slave + Transmission_delay</label>
			<label kind="synchronisation" x="-68" y="-646">DM_T_out!</label>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id12"/>
			<label kind="guard" x="-68" y="-272">t &gt;= Local_delay_slave + Transmission_delay</label>
			<label kind="synchronisation" x="-68" y="-297">DM_C_out!</label>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id9"/>
			<label kind="synchronisation" x="-68" y="-391">DM_C_in?</label>
			<label kind="assignment" x="-68" y="-365">t := 0</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id8"/>
			<label kind="guard" x="-68" y="-450">t &gt;= Local_delay_slave + Transmission_delay</label>
			<label kind="synchronisation" x="-68" y="-476">DM_R_out!</label>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id12"/>
			<nail x="-119" y="-43"/>
			<nail x="-119" y="-221"/>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id10"/>
			<label kind="guard" x="-68" y="-85">t &gt;= Local_delay_slave + Transmission_delay</label>
			<label kind="synchronisation" x="-68" y="-110">SM_out!</label>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id11"/>
			<label kind="synchronisation" x="-68" y="-204">SM_in?</label>
			<label kind="assignment" x="-68" y="-187">Local_time := Master_ref_time + Delay,
t := 0</label>
		</transition>
	</template>
	<template>
		<name>Last_slave</name>
		<parameter>chan &amp;SM_in, int &amp;Local_time, chan &amp;DM_T_in, chan &amp;DM_R_out, chan &amp;DM_C_in, int &amp;T2, int &amp;T3, int &amp;Delay, int &amp;Master_ref_time</parameter>
		<declaration>clock t;</declaration>
		<location id="id13" x="-136" y="-569">
		</location>
		<location id="id14" x="-136" y="-493">
			<label kind="invariant" x="-119" y="-501">t &lt;= Local_delay_slave + Transmission_delay</label>
		</location>
		<location id="id15" x="-136" y="-408">
		</location>
		<location id="id16" x="-136" y="-323">
		</location>
		<init ref="id13"/>
		<transition>
			<source ref="id15"/>
			<target ref="id16"/>
			<label kind="synchronisation" x="-127" y="-391">DM_C_in?</label>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id16"/>
			<label kind="synchronisation" x="-127" y="-306">SM_in?</label>
			<label kind="assignment" x="-127" y="-289">Local_time := Master_ref_time + Delay,
Num_period := Num_period + 1</label>
			<nail x="-136" y="-246"/>
			<nail x="-178" y="-246"/>
			<nail x="-178" y="-323"/>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id14"/>
			<label kind="synchronisation" x="-128" y="-561">DM_T_in?</label>
			<label kind="assignment" x="-128" y="-544">T2 := Local_time, T3 := Local_time,
t := 0</label>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id15"/>
			<label kind="guard" x="-128" y="-450">t &gt;= Local_delay_slave + Transmission_delay</label>
			<label kind="synchronisation" x="-128" y="-476">DM_R_out!</label>
		</transition>
	</template>
	<template>
		<name>Master</name>
		<parameter>chan &amp;SM_out, int &amp;Local_time, chan &amp;DM_T_out, chan &amp;DM_R_in, chan &amp;DM_C_out, int &amp;T1, int &amp;T4, int &amp;Master_ref_time, clock &amp;gt</parameter>
		<declaration>const int Master_num_slaves = Num_slaves;
const int First_slave_index = 0;

int Trigger;

clock t;

const int Period = 100;

void Calculate_delays()
{
    for(i : int[First_slave_index,Master_num_slaves-1])
    {
        Delay[i] = (((((T4 - T1 - Local_delay_master - T3[i] - Local_delay_slave + T2[i])/2) + Local_delay_master)/10)*10);
    }
}</declaration>
		<location id="id17" x="59" y="-782">
			<urgent/>
		</location>
		<location id="id18" x="59" y="-170">
			<label kind="invariant" x="76" y="-179">t &lt;= Local_delay_master + Transmission_delay</label>
		</location>
		<location id="id19" x="59" y="-272">
			<label kind="invariant" x="76" y="-280">Local_time + gt &lt;= Trigger</label>
		</location>
		<location id="id20" x="59" y="-365">
			<label kind="invariant" x="76" y="-374">t &lt;= Local_delay_master + Transmission_delay</label>
		</location>
		<location id="id21" x="59" y="-731">
			<label kind="invariant" x="76" y="-740">Local_time + gt &lt;= Trigger</label>
		</location>
		<location id="id22" x="59" y="-458">
			<label kind="invariant" x="76" y="-467">Local_time + gt &lt;= Trigger</label>
		</location>
		<location id="id23" x="59" y="-654">
			<label kind="invariant" x="76" y="-663">t &lt;= Local_delay_master + Transmission_delay</label>
		</location>
		<location id="id24" x="59" y="-586">
		</location>
		<init ref="id17"/>
		<transition>
			<source ref="id17"/>
			<target ref="id21"/>
			<label kind="assignment" x="68" y="-773">Trigger = (((Local_time/Period) + 2) * Period) - Local_delay_master</label>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id19"/>
			<label kind="guard" x="68" y="-144">t &gt;= Local_delay_master + Transmission_delay</label>
			<label kind="synchronisation" x="68" y="-161">SM_out!</label>
			<label kind="assignment" x="68" y="-127">Trigger = ((Local_time % Period) &lt; (Period - Local_delay_master) ?
((((Local_time/Period) + 1) * Period) - Local_delay_master):
((((Local_time/Period) + 2) * Period) - Local_delay_master))</label>
			<nail x="59" y="-110"/>
			<nail x="8" y="-110"/>
			<nail x="8" y="-272"/>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id18"/>
			<label kind="guard" x="68" y="-255">Local_time + gt &gt;= Trigger</label>
			<label kind="assignment" x="68" y="-238">t := 0,
Master_ref_time := Local_time</label>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id19"/>
			<label kind="guard" x="68" y="-331">t &gt;= Local_delay_master + Transmission_delay</label>
			<label kind="synchronisation" x="68" y="-348">DM_C_out!</label>
			<label kind="assignment" x="68" y="-314">Trigger = (((Local_time/Period) + 2) * Period) - Local_delay_master</label>
		</transition>
		<transition>
			<source ref="id22"/>
			<target ref="id20"/>
			<label kind="guard" x="68" y="-441">Local_time + gt &gt;= Trigger</label>
			<label kind="assignment" x="68" y="-424">Calculate_delays(),
t := 0</label>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id23"/>
			<label kind="assignment" x="68" y="-714">T1 := Local_time,
t := 0</label>
		</transition>
		<transition>
			<source ref="id23"/>
			<target ref="id24"/>
			<label kind="guard" x="68" y="-621">t &gt;= Local_delay_master + Transmission_delay</label>
			<label kind="synchronisation" x="68" y="-638">DM_T_out!</label>
		</transition>
		<transition>
			<source ref="id24"/>
			<target ref="id22"/>
			<label kind="synchronisation" x="68" y="-569">DM_R_in?</label>
			<label kind="assignment" x="68" y="-552">T4 := Local_time,
Trigger = ((Local_time % Period) &lt; (Period - Local_delay_master) ?
((((Local_time/Period) + 1) * Period) - Local_delay_master):
((((Local_time/Period) + 2) * Period) - Local_delay_master))</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
OM0 = Oscillator(TIC[0], t[0]);
CM0 = Clock(TIC[0], Local_time[0]);
M0 = Master(SM[0], Local_time[0], DM_T[0], DM_R[0], DM_C[0], T1[0], T4[0], Master_ref_time[0], t[0]);
O0 = Oscillator(TIC[0+1], t[0+1]);
C0 = Clock(TIC[0+1], Local_time[0+1]);
S0 = Slave(SM[0], SM[0+1], Local_time[0+1], DM_T[0], DM_R[0+1], DM_C[0], DM_T[0+1], DM_R[0], DM_C[0+1], T2[0], T3[0], Delay[0], Master_ref_time[0]);
//O1 = Oscillator(TIC[1+1]);
//C1 = Clock(TIC[1+1], Local_time[1+1]);
//S1 = Slave(SM[1], SM[1+1], Local_time[1+1], DM_T[1], DM_R[1+1], DM_C[1], DM_T[1+1], DM_R[1], DM_C[1+1], T2[1], T3[1], Delay[1], Master_ref_time[0]);
O1 = Oscillator(TIC[1+1], t[1+1]);
C1 = Clock(TIC[1+1], Local_time[1+1]);
S1 = Last_slave(SM[1], Local_time[1+1], DM_T[1], DM_R[1], DM_C[1], T2[1], T3[1], Delay[1], Master_ref_time[0]);
// List one or more processes to be composed into a system.
system OM0, CM0, M0, O0, C0, S0, O1, C1, S1;
    </system>
	<queries>
		<query>
			<formula>A[] Delay[1] &lt;= 60
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[] Delay[0] &lt;= 40
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[] not deadlock
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[] Num_period &gt; 0 imply Local_time[2] - Local_time[1] &lt;= 40
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[] Num_period &gt; 0 imply Local_time[1] - Local_time[2] &lt;= 30
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[] Num_period &gt; 0 imply Local_time[2] - Local_time[0] &lt;= 30
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[] Num_period &gt; 0 imply Local_time[0] - Local_time[2] &lt;= 30
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[] Num_period &gt; 0 imply Local_time[1] - Local_time[0] &lt;= 20
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[] Num_period &gt; 0 imply Local_time[0] - Local_time[1] &lt;= 30
			</formula>
			<comment>
			</comment>
		</query>
	</queries>
</nta>
